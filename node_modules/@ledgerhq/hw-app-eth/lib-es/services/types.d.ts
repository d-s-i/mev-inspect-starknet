export declare type LedgerEthTransactionResolution = {
    erc20Tokens: Array<string>;
    nfts: Array<string>;
    externalPlugin: Array<{
        payload: string;
        signature: string;
    }>;
    plugin: Array<string>;
};
export declare type LoadConfig = {
    nftExplorerBaseURL?: string | null;
    pluginBaseURL?: string | null;
    extraPlugins?: any | null;
};
/**
 * Allows to configure precisely what the service need to resolve.
 * for instance you can set nft:true if you need clear signing on NFTs. If you set it and it is not a NFT transaction, it should still work but will do a useless service resolution.
 */
export declare type ResolutionConfig = {
    nft?: boolean;
    externalPlugins?: boolean;
    erc20?: boolean;
};
export declare type LedgerEthTransactionService = {
    resolveTransaction: (rawTxHex: string, loadConfig: LoadConfig, resolutionConfig: ResolutionConfig) => Promise<LedgerEthTransactionResolution>;
};
//# sourceMappingURL=types.d.ts.map